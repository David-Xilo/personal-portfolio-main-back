definitions:
  controllers.GamesFilter:
    properties:
      genre:
        type: string
      rating:
        type: integer
    type: object
  models.Contacts:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      github:
        type: string
      id:
        type: integer
      linked-in:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.GameGenres:
    enum:
    - undefined
    - strategy
    - table top
    type: string
    x-enum-varnames:
    - GameGenreUndefined
    - GameGenreStrategy
    - GameGenreTableTop
  models.Games:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      genre:
        $ref: '#/definitions/models.GameGenres'
      id:
        type: integer
      link_to_git:
        type: string
      link_to_store:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.News:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      genre:
        $ref: '#/definitions/models.NewsGenres'
      headline:
        type: string
      id:
        type: integer
      link-to-source:
        type: string
      sentiment:
        $ref: '#/definitions/models.NewsSentiments'
      updated_at:
        type: string
    type: object
  models.NewsGenres:
    enum:
    - tech
    - gaming
    - finance
    type: string
    x-enum-varnames:
    - NewsGenreTech
    - NewsGenreGaming
    - NewsGenreFinance
  models.NewsSentiments:
    enum:
    - undefined
    - good
    - indifferent
    - bad
    type: string
    x-enum-varnames:
    - SentimentUndefined
    - SentimentGood
    - SentimentIndifferent
    - SentimentBad
  models.TechProjects:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      id:
        type: integer
      link-to-git:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.TimeframeTypes:
    enum:
    - custom
    - 1d
    - 1w
    - 1m
    - 3m
    - 6m
    - 1y
    type: string
    x-enum-varnames:
    - TimeframeCustom
    - Timeframe1D
    - Timeframe1W
    - Timeframe1M
    - Timeframe3M
    - Timeframe6M
    - Timeframe1Y
  models.TopicOfTheSeasons:
    properties:
      created_at:
        type: string
      custom_end:
        type: string
      custom_start:
        type: string
      deleted_at:
        type: string
      genre:
        $ref: '#/definitions/models.NewsGenres'
      id:
        type: integer
      topic:
        type: string
      topic_timestamp:
        type: string
      type:
        $ref: '#/definitions/models.TimeframeTypes'
      updated_at:
        type: string
    type: object
  service.NewsWithTopic:
    properties:
      news_list:
        items:
          $ref: '#/definitions/models.News'
        type: array
      topic_of_the_season:
        $ref: '#/definitions/models.TopicOfTheSeasons'
    type: object
info:
  contact: {}
paths:
  /about/contact:
    get:
      consumes:
      - application/json
      description: Get contact information from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Contacts'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get contact information
      tags:
      - about
  /about/contact-text:
    get:
      consumes:
      - application/json
      description: Get an introduction message for the about section
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get introduction about the app
      tags:
      - about
  /about/intro:
    get:
      consumes:
      - application/json
      description: Get an introduction message for the about section
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get introduction about the app
      tags:
      - about
  /finance/intro:
    get:
      consumes:
      - application/json
      description: Returns an introductory message for the finance section
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get introduction to the finance section
      tags:
      - finance
  /finance/news:
    get:
      consumes:
      - application/json
      description: Returns a list of news related to the finance genre
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.News'
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get finance news
      tags:
      - finance
  /finance/news/topic-of-the-season:
    get:
      consumes:
      - application/json
      description: Returns the topic of the season for the finance genre
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.NewsWithTopic'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get topic of the season for finance
      tags:
      - finance
  /games/filter:
    post:
      consumes:
      - application/json
      description: Filters the games based on genre and rating parameters
      parameters:
      - description: Filter parameters for games
        in: body
        name: filter
        required: true
        schema:
          $ref: '#/definitions/controllers.GamesFilter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Games'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Filter games by genre and rating
      tags:
      - games
  /games/genres:
    get:
      consumes:
      - application/json
      description: Returns a list of all available game genres
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a list of game genres
      tags:
      - games
  /games/intro:
    get:
      consumes:
      - application/json
      description: Returns a brief introduction to the games section
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get introduction to the games section
      tags:
      - games
  /games/news:
    get:
      consumes:
      - application/json
      description: Returns a list of news related to games
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.News'
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get news related to games
      tags:
      - games
  /games/news/topic-of-the-season:
    get:
      consumes:
      - application/json
      description: Returns the topic of the season for the games genre
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.NewsWithTopic'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get topic of the season for games
      tags:
      - games
  /games/projects:
    get:
      consumes:
      - application/json
      description: Returns a list of projects related to games
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Games'
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get projects related to games
      tags:
      - games
  /tech/intro:
    get:
      consumes:
      - application/json
      description: Returns an introductory message for the tech section
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get introduction to the tech section
      tags:
      - tech
  /tech/news:
    get:
      consumes:
      - application/json
      description: Returns a list of news related to the tech genre
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.News'
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get tech news
      tags:
      - tech
  /tech/news/topic-of-the-season:
    get:
      consumes:
      - application/json
      description: Returns the topic of the season for the tech genre
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.NewsWithTopic'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get topic of the season for tech
      tags:
      - tech
  /tech/projects:
    get:
      consumes:
      - application/json
      description: Returns a list of tech-related projects
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TechProjects'
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get projects related to tech
      tags:
      - tech
swagger: "2.0"
